prototype(TYPO3.Neos:PrimaryContent).productDetails {
	productDetailsNode = ${q(site).find('product').get(0)}

	condition = ${q(node).is(this.productDetailsNode)}
	type = 'Sphere.Neos:ProductDetails'
}

prototype(Sphere.Neos:ProductDetails) < prototype(TYPO3.TypoScript:Template) {
	templatePath = 'resource://Sphere.Neos/Private/Templates/NodeTypes/ProductDetails.html'

	productSlug = ${request.arguments.productSlug}
	product = ${q(SphereProducts.findProductBySlug(this.productSlug, node)).get(0)}
	attributes = ${q(SphereProducts.getProductAttributes(this.product)).get()}

	@cache {
		mode = 'cached'

		maximumLifetime = 1

		entryIdentifier {
			node = ${node}
			productSlug = ${this.product.slug}
		}
	}

}

#
# Add the product details "product.slug" value to cache entry identifiers in cache layers above the product details node.
#
root.@cache.entryIdentifier.productSlug = ${request.arguments.productSlug}

#
# Make sure that, if it exists, the productSlug HTTP argument is considered while building the identifier for cache
# entries. This is necessary to make sure that on the Product Details page, each product gets its own cache entry.
#
prototype(TYPO3.Neos:Page) {
	@cache.entryIdentifier.productSlug = ${request.arguments.productSlug}
}

#
# Teaser for a single product, specified by an SKU
#
prototype(Sphere.Neos:ProductTeaser) < prototype(TYPO3.Neos:Content) {
	productDetailsNode = ${q(site).find('product').get(0)}
	product = ${q(SphereProducts.findProductBySku(this.sku, node)).get(0)}

	@cache {
		maximumLifetime = 1
	}
}

#
#
#
prototype(Sphere.Neos:ProductTeaserContent) < prototype(TYPO3.Neos.NodeTypes:Text) {
	productDetailsNode = ${q(site).find('product').get(0)}
	product = ${q(SphereProducts.findProductBySku(this.sku, node)).get(0)}

	@cache {
		maximumLifetime = 1
	}
}

#
# A list of products, based on a query specified by the "q" request argument
#
prototype(Sphere.Neos:ProductsList) < prototype(TYPO3.Neos:Content) {
	searchForm = TYPO3.TypoScript:Template {
		templatePath = 'resource://Sphere.Neos/Private/Templates/NodeTypes/SearchForm.html'
	}

	productDetailsNode = ${q(site).find('product').get(0)}
	searchQuery = ${request.arguments.q}

	products = ${q(SphereProducts.findProducts(this.searchQuery, this.defaultSearch, node)).get()}
	firstProduct = ${q(this.products).get(0)}

	@cache {
		maximumLifetime = 1
	}
}

#
# The current product cart
#
prototype(Sphere.Neos:ProductCart) < prototype(TYPO3.Neos:Content) {
	productDetailsNode = ${q(site).find('product').get(0)}
	cart = ${q(SphereProducts.getCart(node)).get(0)}

	@cache {
		maximumLifetime = 1
	}
}
